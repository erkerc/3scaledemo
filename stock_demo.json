{
    "openapi": "3.0.2",
    "info": {
        "title": "stock_demo",
        "version": "0.9.0",
        "description": "desc",
        "contact": {

        },
        "license": {
            "name": "GNU AGPLv3",
            "url": "https://www.gnu.org/licenses/agpl.txt"
        }
    },
    "paths": {
        "/stocks": {
            "summary": "Path used to manage the list of stocks.",
            "description": "The REST endpoint/path used to list and create zero or more `stock` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/stock"
                                    }
                                },
                                "examples": {
                                    "example": {
                                        "value": [
                                            {
                                                "product_id": "inwi example",
                                                "store_id": 58,
                                                "units": 12
                                            },
                                            {
                                                "product_id": "some text",
                                                "store_id": 57,
                                                "units": 54
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Successful response - returns an array of `stock` entities."
                    }
                },
                "operationId": "getstocks",
                "summary": "List All stocks",
                "description": "Gets a list of all `stock` entities."
            },
            "post": {
                "requestBody": {
                    "description": "A new `stock` to be created.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/stock"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful response."
                    }
                },
                "operationId": "createstock",
                "summary": "Create a stock",
                "description": "Creates a new instance of a `stock`."
            }
        },
        "/stocks/{stockId}": {
            "summary": "Path used to manage a single stock.",
            "description": "The REST endpoint/path used to get, update, and delete single instances of an `stock`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/stock"
                                }
                            }
                        },
                        "description": "Successful response - returns a single `stock`."
                    }
                },
                "operationId": "getstock",
                "summary": "Get a stock",
                "description": "Gets the details of a single instance of a `stock`."
            },
            "put": {
                "requestBody": {
                    "description": "Updated `stock` information.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/stock"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful response."
                    }
                },
                "operationId": "updatestock",
                "summary": "Update a stock",
                "description": "Updates an existing `stock`."
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Successful response."
                    }
                },
                "operationId": "deletestock",
                "summary": "Delete a stock",
                "description": "Deletes an existing `stock`."
            },
            "parameters": [
                {
                    "name": "stockId",
                    "description": "A unique identifier for a `stock`.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/orders": {
            "summary": "Path used to manage the list of orders.",
            "description": "The REST endpoint/path used to list and create zero or more `order` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/order"
                                    }
                                }
                            }
                        },
                        "description": "Successful response - returns an array of `order` entities."
                    }
                },
                "operationId": "getorders",
                "summary": "List All orders",
                "description": "Gets a list of all `order` entities."
            },
            "post": {
                "requestBody": {
                    "description": "A new `order` to be created.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/order"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful response."
                    }
                },
                "operationId": "createorder",
                "summary": "Create a order",
                "description": "Creates a new instance of a `order`."
            }
        },
        "/orders/{orderId}": {
            "summary": "Path used to manage a single order.",
            "description": "The REST endpoint/path used to get, update, and delete single instances of an `order`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order"
                                }
                            }
                        },
                        "description": "Successful response - returns a single `order`."
                    }
                },
                "operationId": "getorder",
                "summary": "Get a order",
                "description": "Gets the details of a single instance of a `order`."
            },
            "put": {
                "requestBody": {
                    "description": "Updated `order` information.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/order"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful response."
                    }
                },
                "operationId": "updateorder",
                "summary": "Update a order",
                "description": "Updates an existing `order`."
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Successful response."
                    }
                },
                "operationId": "deleteorder",
                "summary": "Delete a order",
                "description": "Deletes an existing `order`."
            },
            "parameters": [
                {
                    "name": "orderId",
                    "description": "A unique identifier for a `order`.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        }
    },
    "components": {
        "schemas": {
            "stock": {
                "title": "Root Type for stock",
                "description": "stock data",
                "type": "object",
                "properties": {
                    "product_id": {
                        "type": "string"
                    },
                    "store_id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "units": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "example": {
                    "product_id": "Item1",
                    "store_id": 50,
                    "units": 100
                }
            },
            "order": {
                "title": "Root Type for order",
                "description": "",
                "type": "object",
                "properties": {
                    "store_id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "order_id": {
                        "type": "string"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "size": {
                                    "type": "string"
                                },
                                "units": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "operation_type": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "example": {
                    "store_id": 1,
                    "order_id": "1",
                    "items": [
                        {
                            "id": "1",
                            "name": "name1",
                            "size": "xl",
                            "units": 10,
                            "operation_type": "return"
                        }
                    ]
                }
            }
        },
        "securitySchemes": {
            "userkey": {
                "type": "apiKey",
                "name": "apikey",
                "in": "query"
            }
        }
    },
    "security": [
        {
            "userkey": [
            ]
        }
    ],
    "tags": [
        {
            "name": "stock",
            "description": ""
        }
    ]
}