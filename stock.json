{
    "basePath": "/endpoint",
    "definitions": {
        "ResponseEntity": {
            "properties": {
                "body": {
                    "type": "object"
                },
                "statusCode": {
                    "enum": [
                        "100",
                        "101",
                        "102",
                        "103",
                        "200",
                        "201",
                        "202",
                        "203",
                        "204",
                        "205",
                        "206",
                        "207",
                        "208",
                        "226",
                        "300",
                        "301",
                        "302",
                        "303",
                        "304",
                        "305",
                        "307",
                        "308",
                        "400",
                        "401",
                        "402",
                        "403",
                        "404",
                        "405",
                        "406",
                        "407",
                        "408",
                        "409",
                        "410",
                        "411",
                        "412",
                        "413",
                        "414",
                        "415",
                        "416",
                        "417",
                        "418",
                        "419",
                        "420",
                        "421",
                        "422",
                        "423",
                        "424",
                        "426",
                        "428",
                        "429",
                        "431",
                        "451",
                        "500",
                        "501",
                        "502",
                        "503",
                        "504",
                        "505",
                        "506",
                        "507",
                        "508",
                        "509",
                        "510",
                        "511"
                    ],
                    "type": "string"
                },
                "statusCodeValue": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "StockValueControllerResponse": {
            "properties": {
                "product_id": {
                    "type": "string"
                },
                "store_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "units": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "StoreValueControllerResponse": {
            "properties": {
                "store_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "store_name": {
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "host": "servi-os-staging2.api.5.9.49.249.xip.io",
    "info": {
        "contact": {},
        "description": "Stock documentation: The STOCK API provides an interface for managing stocks. This API does not include security concerns associated with a user account. This is about personal data, which can be conceived as manageable by the user.",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0"
        },
        "termsOfService": "urn:tos",
        "title": "Stock API",
        "version": "1.0"
    },
    "paths": {
        "/api/health": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "healthUsingGET",
                "parameters": [
                  {"name":"user_key","in":"query","description":"user_key","required":false,"type":"string","x-data-threescale-name":"user_keys"}
                ],              
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseEntity"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "summary": "health",
                "tags": [
                    "health-controller"
                ]
            }
        },
        "/api/stock": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getStockUsingGET_2",
                "parameters": [
                  {"name":"user_key","in":"query","description":"user_key","required":false,"type":"string","x-data-threescale-name":"user_keys"}
                ],  
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/StockValueControllerResponse"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "summary": "getStock",
                "tags": [
                    "stock-controller"
                ]
            }
        },
        "/api/stock/{storeid}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getStockUsingGET_1",
                "parameters": [
                  {"name":"user_key","in":"query","description":"user_key","required":false,"type":"string","x-data-threescale-name":"user_keys"},
                    {
                        "description": "storeid",
                        "format": "int32",
                        "in": "path",
                        "name": "storeid",
                        "required": true,
                        "type": "integer"
                    }                  
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/StockValueControllerResponse"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "summary": "getStockByStore",
                "tags": [
                    "stock-controller"
                ]
            }
        },
        "/api/stock/{storeid}/{productid}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getStockUsingGET",
                "parameters": [
                  {"name":"user_key","in":"query","description":"user_key","required":false,"type":"string","x-data-threescale-name":"user_keys"},
                    {
                        "description": "storeid",
                        "format": "int32",
                        "in": "path",
                        "name": "storeid",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "productid",
                        "in": "path",
                        "name": "productid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StockValueControllerResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "summary": "getStockByProduct",
                "tags": [
                    "stock-controller"
                ]
            }
        },
        "/api/supplier": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getStockUsingGET",
                "parameters": [
                  {"name":"user_key","in":"query","description":"user_key","required":false,"type":"string","x-data-threescale-name":"user_keys"}
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StockValueControllerResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "summary": "getStockByProduct",
                "tags": [
                    "stock-controller"
                ]
            }
        },      
        "/api/store": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getStoresUsingGET",
                "parameters": [
                  {"name":"user_key","in":"query","description":"user_key","required":false,"type":"string","x-data-threescale-name":"user_keys"}
                ],              
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/StoreValueControllerResponse"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "summary": "getStores",
                "tags": [
                    "stock-controller"
                ]
            }
        }
    },
    "schemes": [
        "https"
    ],
    "security": [
        {
            "apikey": []
        }
    ],
    "securityDefinitions": {
        "apikey": {
            "description": "apikey",
            "in": "query",
            "name": "user_key",
            "type": "apiKey"
        }
    },
    "swagger": "2.0",
    "tags": [
        {
            "description": "Stock Controller",
            "name": "stock-controller"
        },
        {
            "description": "Health Controller",
            "name": "health-controller"
        }
    ]
}
